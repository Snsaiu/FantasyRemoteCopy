@page "/history"
@using AirTransfer.Enums
@using AirTransfer.Models
@using Microsoft.FluentUI.AspNetCore.Components.Icons.Color
@using Size48 = Microsoft.FluentUI.AspNetCore.Components.Icons.Regular.Size48

@inherits PageComponentBase

<div>
    <FluentListbox TOption="SaveItemModel" Style="overflow:hidden;outline:none;border:none">
        @if (this.Models != null)
        {
            foreach (var item in Models)
            {
            <FluentCard Height="80px;" Style="margin: 2px;">
                <FluentGrid Spacing="1" Justify="JustifyContent.SpaceAround">

                    <FluentGridItem xs="1">
                        <FluentStack Orientation="Orientation.Vertical"
                                     VerticalAlignment="VerticalAlignment.Center">

                            <FluentSpacer></FluentSpacer>
                            @switch (item.SendType)
                            {
                                case SendType.Text:
                                    <FluentIcon Value="@(Icon.FromImageUrl("images/text.png"))"></FluentIcon>
                                    break;
                                case SendType.File:
                                    <FluentIcon Value="@(Icon.FromImageUrl("images/file.png"))"/>
                                    break;
                                case SendType.Folder:
                                    <FluentIcon Value="@(Icon.FromImageUrl("images/folder.png"))"></FluentIcon>
                                    break;
                            }
                            <FluentSpacer></FluentSpacer>
                        </FluentStack>

                    </FluentGridItem>
                    <FluentGridItem xs="8">
                        <FluentStack Orientation="Orientation.Vertical"

                                     HorizontalAlignment="HorizontalAlignment.Start" VerticalGap="1">
                            <FluentLabel>
                                @if (item.SendType == SendType.Text)
                                {
                                    <FluentLabel>@item.Content</FluentLabel>
                                }
                                else
                                {
                                    var summary = Path.GetFileName(@item.Content);
                                    <FluentLabel>@summary</FluentLabel>
                                }

                            </FluentLabel>
                            @{
                                var source = $"source:{item.SourceDeviceName}";
                                <FluentLabel Style="font-size: 12px;">@source</FluentLabel>
                            }
                            <FluentLabel Style="font-size: 10px;">@item.Time</FluentLabel>
                        </FluentStack>
                    </FluentGridItem>
                    <FluentGridItem xs="3">
                        <FluentStack Orientation="Orientation.Horizontal"
                                     VerticalGap="0"
                                     HorizontalAlignment="HorizontalAlignment.Right"
                                     VerticalAlignment="VerticalAlignment.Center">
                            @if (item.SendType == SendType.Text)
                            {
                                <FluentButton
                                    IconStart="@(new Microsoft.FluentUI.AspNetCore.Components.Icons.Regular.Size20.Copy())"
                                    OnClick="() => CopyContentCommand(item)"></FluentButton>
                            }
                            else if (item.SendType == SendType.File)
                            {
                                <FluentButton
                                    OnClick="() => OpenFileCommand(item)"
                                    IconStart="@(new Microsoft.FluentUI.AspNetCore.Components.Icons.Regular.Size20.Open())"/>

                                @if (SystemType.System is Enums.SystemType.Windows or Enums.SystemType.MacOS)
                                {
                                    <FluentButton
                                        OnClick="() => OpenFolderCommand(item)"
                                        IconStart="@(new Microsoft.FluentUI.AspNetCore.Components.Icons.Regular.Size20.FolderOpen())"/>
                                }
                            }
                            else if (item.SendType == SendType.Folder && SystemType.System is not Enums.SystemType.IOS and not Enums.SystemType.Android)
                            {
                                <FluentButton
                                    OnClick="()=>OpenFolderCommand(item)"
                                    IconStart="@(new Microsoft.FluentUI.AspNetCore.Components.Icons.Regular.Size20.FolderOpen())"/>
                            }
                            else
                            {
                                throw new NotImplementedException();
                            }

                            <FluentButton OnClick="()=>DeleteCommand(item)" IconStart="@(new Microsoft.FluentUI.AspNetCore.Components.Icons.Regular.Size20.Delete())">
                            </FluentButton>
                        </FluentStack>
                    </FluentGridItem>
                </FluentGrid>
            </FluentCard>
        }
        }
    </FluentListbox>
</div>